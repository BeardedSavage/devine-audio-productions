{
  "name": "daprd",
  "version": "1.0.0",
  "description": "A CI/CD repo for Devine Audio Productions\r Please take this code base a reference. The code made here is not going to work for your needs as it did mine.\r Remember all code bases are different and should be use the way you intend it's use for.\r This being said, I am not liably responsible for any broken code you may get on your end as this is built for someone elses needs.",
  "main": "index.js",
  "homepage": "https://github.com/BeardedSavage/devine-audio-productions",
  "dependencies": {
    "array-union": "^2.1.0",
    "async": "^3.2.6",
    "bootstrap": "^5.3.8",
    "braces": "^3.0.3",
    "commander": "^13.1.0",
    "commondir": "^1.0.1",
    "concurrently": "^9.2.1",
    "dir-glob": "^3.0.1",
    "email-addresses": "^5.0.0",
    "escape-string-regexp": "^1.0.5",
    "fast-glob": "^3.3.3",
    "fastq": "^1.19.1",
    "filename-reserved-regex": "^2.0.0",
    "filenamify": "^4.3.0",
    "fill-range": "^7.1.1",
    "find-cache-dir": "^3.3.2",
    "find-up": "^4.1.0",
    "fs-extra": "^11.3.1",
    "glob-parent": "^5.1.2",
    "globby": "^11.1.0",
    "graceful-fs": "^4.2.11",
    "ignore": "^5.3.2",
    "is-extglob": "^2.1.1",
    "is-glob": "^4.0.3",
    "is-number": "^7.0.0",
    "jsonfile": "^6.2.0",
    "locate-path": "^5.0.0",
    "make-dir": "^3.1.0",
    "merge2": "^1.4.1",
    "micromatch": "^4.0.8",
    "p-limit": "^2.3.0",
    "p-locate": "^4.1.0",
    "p-try": "^2.2.0",
    "path-exists": "^4.0.0",
    "path-type": "^4.0.0",
    "picomatch": "^2.3.1",
    "pkg-dir": "^4.2.0",
    "queue-microtask": "^1.2.3",
    "reusify": "^1.1.0",
    "run-parallel": "^1.2.0",
    "semver": "^6.3.1",
    "slash": "^3.0.0",
    "strip-outer": "^1.0.1",
    "to-regex-range": "^5.0.1",
    "trim-repeated": "^1.0.0",
    "universalify": "^2.0.1"
  },
  "devDependencies": {
    "gh-pages": "^6.3.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "predeploy": "npm run test",
    "deploy": "gh-pages -d build",
    "server": "cd backend && nodemon app.js",
    "client": "cd frontend && npm run dev",
    "start": "concurrently \"npm run server\" \"npm run client\"",
    "heroku-prebuild": "echo This runs before installing dependencies. && NPM_CONFIG_PRODUCTION=false",
    "heroku-postbuild": "echo This runs after installing dependencies, but before pruning and caching dependencies. && NODE_BUILD_FLAGS",
    "heroku-cleanup": "echo This runs after pruning and caching dependencies. && NPM_CONFIG_PRODUCTION=true"
  },
  "author": "Jimmy Angelidakis",
  "license": "ISC"
}
